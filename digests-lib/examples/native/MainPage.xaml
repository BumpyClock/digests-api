<!-- Example WinUI 3 page using the Digests library -->
<Page x:Class="DigestsApp.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      mc:Ignorable="d">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Header -->
        <Grid Grid.Row="0" Padding="20" Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0" Orientation="Vertical" Spacing="10">
                <TextBlock Text="RSS Feed Reader" Style="{StaticResource TitleTextBlockStyle}"/>
                
                <StackPanel Orientation="Horizontal" Spacing="10">
                    <TextBox x:Name="FeedUrlBox" 
                             Text="{x:Bind ViewModel.FeedUrl, Mode=TwoWay}"
                             PlaceholderText="Enter feed URL..."
                             Width="400"/>
                    
                    <Button Command="{x:Bind ViewModel.LoadFeedCommand}"
                            Content="Load Feed"
                            Style="{StaticResource AccentButtonStyle}"/>
                    
                    <Button Command="{x:Bind ViewModel.LoadMultipleFeedsCommand}"
                            Content="Load Multiple"/>
                    
                    <CheckBox Content="Enable Enrichment"
                              IsChecked="{x:Bind ViewModel.EnableEnrichment, Mode=TwoWay}"/>
                </StackPanel>
            </StackPanel>

            <!-- Loading indicator -->
            <ProgressRing Grid.Column="1" 
                          IsActive="{x:Bind ViewModel.IsLoading, Mode=OneWay}"
                          Margin="20,0"/>
        </Grid>

        <!-- Error message -->
        <InfoBar x:Name="ErrorBar"
                 Grid.Row="0"
                 VerticalAlignment="Bottom"
                 IsOpen="{x:Bind ViewModel.ErrorMessage, Mode=OneWay, Converter={StaticResource StringToBoolConverter}}"
                 Severity="Error"
                 Message="{x:Bind ViewModel.ErrorMessage, Mode=OneWay}"/>

        <!-- Content -->
        <ScrollViewer Grid.Row="1">
            <StackPanel Padding="20" Spacing="20">
                <!-- Feed info -->
                <ItemsControl ItemsSource="{x:Bind ViewModel.Feeds, Mode=OneWay}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Expander HorizontalAlignment="Stretch" IsExpanded="True">
                                <Expander.Header>
                                    <StackPanel Orientation="Horizontal" Spacing="10">
                                        <TextBlock Text="{Binding Title}" 
                                                   Style="{StaticResource SubtitleTextBlockStyle}"/>
                                        <TextBlock Text="{Binding FeedType}" 
                                                   Foreground="{ThemeResource SystemControlForegroundBaseMediumBrush}"/>
                                        <TextBlock Text="{Binding Items.Length}" 
                                                   Foreground="{ThemeResource SystemControlForegroundBaseMediumBrush}"/>
                                        <TextBlock Text="items" 
                                                   Foreground="{ThemeResource SystemControlForegroundBaseMediumBrush}"/>
                                    </StackPanel>
                                </Expander.Header>
                                <TextBlock Text="{Binding Description}" 
                                           TextWrapping="Wrap"
                                           Margin="0,10,0,0"/>
                            </Expander>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <!-- Feed items -->
                <ItemsControl ItemsSource="{x:Bind ViewModel.AllItems, Mode=OneWay}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="0,0,0,20" 
                                  Padding="15" 
                                  CornerRadius="8"
                                  Background="{ThemeResource CardBackgroundFillColorDefaultBrush}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <!-- Thumbnail with color -->
                                <Grid Grid.Column="0" Margin="0,0,15,0">
                                    <Border Width="100" Height="100" CornerRadius="8">
                                        <Border.Background>
                                            <SolidColorBrush Color="{Binding ThumbnailColor, Converter={StaticResource RgbColorConverter}}"/>
                                        </Border.Background>
                                        <Image Source="{Binding Thumbnail}" 
                                               Stretch="UniformToFill"/>
                                    </Border>
                                </Grid>

                                <!-- Content -->
                                <StackPanel Grid.Column="1" Spacing="5">
                                    <HyperlinkButton NavigateUri="{Binding Link}">
                                        <TextBlock Text="{Binding Title}" 
                                                   Style="{StaticResource BaseTextBlockStyle}"
                                                   FontWeight="SemiBold"
                                                   TextWrapping="Wrap"/>
                                    </HyperlinkButton>
                                    
                                    <TextBlock Text="{Binding Description}" 
                                               TextWrapping="Wrap"
                                               MaxLines="3"
                                               TextTrimming="WordEllipsis"
                                               Foreground="{ThemeResource SystemControlForegroundBaseMediumBrush}"/>
                                    
                                    <StackPanel Orientation="Horizontal" Spacing="10">
                                        <TextBlock Text="{Binding Published}" 
                                                   FontSize="12"
                                                   Foreground="{ThemeResource SystemControlForegroundBaseMediumLowBrush}"/>
                                        
                                        <TextBlock Text="{Binding Author}" 
                                                   FontSize="12"
                                                   Foreground="{ThemeResource SystemControlForegroundBaseMediumLowBrush}"
                                                   Visibility="{Binding Author, Converter={StaticResource StringToVisibilityConverter}}"/>
                                        
                                        <!-- Podcast info -->
                                        <TextBlock FontSize="12"
                                                   Foreground="{ThemeResource SystemControlForegroundBaseMediumLowBrush}"
                                                   Visibility="{Binding Duration, Converter={StaticResource StringToVisibilityConverter}}">
                                            <Run Text="Duration:"/>
                                            <Run Text="{Binding Duration}"/>
                                            <Run Text="seconds"/>
                                        </TextBlock>
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</Page>